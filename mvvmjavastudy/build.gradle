apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId "com.spark.mvvmjavastudy"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode versionCode
        versionName versionName
        ndk {// 设置支持的SO库架构
            abiFilters 'armeabi', 'x86'
            /*'armeabi','arm64-v8a','armeabi-v7a', 'mips','mips64', 'x86', 'x86_64'*/
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //可以压缩包体积、真机魅族通知消息、模拟器地图不强制退出
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'src/main/aidl']
            resources.srcDirs = ['src/main/java', 'src/main/aidl']
            aidl.srcDirs = ['src/main/aidl']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }

    buildTypes {
        release {
            minifyEnabled true //混淆
            zipAlignEnabled true //Zipalign优化
            shrinkResources true // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {//dataBinding  true开启  false关闭
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':CommonLibrary')
    annotationProcessor rootProject.ext.deps.roomcompiler
}
